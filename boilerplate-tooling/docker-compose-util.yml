services:
  # Utility service which exposes wp-cli. Useful for testing pre-releases
  # Update image version with `docker run ideasonpurpose/wordpress init`
  # Project info: https://github.com/ideasonpurpose/docker-wordpress-dev
  wp-cli:
    depends_on:
      - db
      - wordpress
    # image: ideasonpurpose/wordpress:dev
    image: ideasonpurpose/wordpress:0.9.6
    user: www-data
    volumes:
      - wp_data:/var/www/html
      - ./wp-content/themes/${npm_package_name:-ioptheme}:/var/www/html/wp-content/themes/${npm_package_name:-ioptheme}
      - ./wp-content/plugins:/var/www/html/wp-content/plugins
      - ./wp-content/uploads:/var/www/html/wp-content/uploads
    environment:
      - WP_CLI_CACHE_DIR=/tmp/wp-cli
      - WP_CLI_DISABLE_AUTO_CHECK_UPDATE=true
    command: wp theme activate ${npm_package_name:-ioptheme}

  # Utility service for running composer commands. Useful for adding tools from packagist
  # Image from: https://hub.docker.com/_/composer
  composer:
    image: composer:2.2.7
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      COMPOSER_HOME: /.composer
    volumes:
      - ./:/app
      - ~/.composer:/.composer
    command: install

  # Runs phpMyAdmin on port 8002
  # Image from: https://hub.docker.com/_/phpmyadmin
  phpmyadmin:
    image: phpmyadmin:5.1.3-apache
    ports:
      - "${npm_config_port:-8002}:80"
    depends_on:
      - db
    environment:
      PMA_USER: root
      PMA_PASSWORD: ~
    command: |
      bash -c  'echo &&
                echo -e  "🛠   \033[33mStarting phpMyAdmin at\033[0m \033[36mhttp://localhost:${npm_config_port:-8002}\033[0m" &&
                echo &&
                /docker-entrypoint.sh apache2-foreground'

  # XDebug profile viewer at http://localhost:9001 (change port with --port=xxxx)
  # Enable profiling by appending `?XDEBUG_PROFILE=1` to any request
  # https://hub.docker.com/r/wodby/webgrind
  webgrind:
    image: wodby/webgrind:1.9
    user: "${UID:-1000}:${GID:-1000}"
    ports:
      - "${npm_config_port:-9004}:8080"
    depends_on:
      - wordpress
    volumes:
      - ./webpack/xdebug:/tmp
    environment:
      WEBGRIND_DEFAULT_TIMEZONE: America/New_York
    command: |
      bash -c  'echo &&
                echo -e  "🔍  \033[33mStarting WebGrind server at\033[0m \033[36mhttp://localhost:${npm_config_port:-8002}\033[0m" &&
                php -S 0.0.0.0:8080 index.php
                '

  # Dumps the current database to _db/theme-YYYY-MM-DDTHHMMSS.sql.gz
  # Image from: https://hub.docker.com/_/mariadb
  mysqldump:
    # image: mysql:5.7
    image: mariadb:10.6.5
    depends_on:
      - db
    volumes:
      - ./_db:/usr/src
    environment:
      MYSQL_DATABASE: wordpress
      OWNER_GROUP: "${UID:-1000}:${GID:-1000}"

    # NOTE: The mysqldump file will include these CREATE/USE commands:
    #           CREATE DATABASE `wordpress`;
    #           USE `wordpress`;
    #       to drop those lines, remove  "--databases" from the mysqldump command
    command: |
      bash -c  'export DUMPFILE="/usr/src/'${npm_package_name:-dumpfile}'-$$(date +%FT%H%M%S).sql" &&
                echo $${DUMPFILE} &&
                mysqldump -hdb --default-character-set=utf8mb4 --databases $${MYSQL_DATABASE} > "$${DUMPFILE}" &&
                gzip "$${DUMPFILE}" &&
                chown -R $${OWNER_GROUP} /usr/src &&
                echo "Successfully dumped MySQL database to \"$${DUMPFILE}.gz\""'

  # Reloads the database from the first found *.sql dumpfile in _db
  # Image from: https://hub.docker.com/_/mariadb
  mysql-reload:
    # image: mysql:5.7
    image: mariadb:10.6.5
    depends_on:
      - db
    volumes:
      - ./_db:/usr/src/dumpfiles
    environment:
      MYSQL_DATABASE: wordpress
    command: |
      bash -c  'mysqladmin -hdb -v -f drop $${MYSQL_DATABASE} &&
                mysqladmin -hdb -v -f create $${MYSQL_DATABASE} &&
                echo Database \"$${MYSQL_DATABASE}\" created &&
                echo Reloading database from dumpfile &&
                mysql -hdb $${MYSQL_DATABASE} < $$(ls /usr/src/dumpfiles/*.sql | tail -n1)'

  # Activates the theme directly in the database
  # Image from: https://hub.docker.com/_/mariadb
  theme-activate:
    # image: mysql:5.7
    image: mariadb:10.6.5
    depends_on:
      - db
    volumes:
      - ./_db:/usr/src/dumpfiles
    environment:
      MYSQL_DATABASE: wordpress
    command: |
      bash -c  'for i in {1..10}
                do echo -e "⏳  \033[33mWaiting for MySQL server...\033[0m" &&
                  mysql -s -h db -e "exit" && break || sleep 3
                done &&
                sleep 2 &&
                echo -e "✔️   \033[32mConnected to MySQL\033[0m" &&
                if [[ $$(mysql -s -h db $${MYSQL_DATABASE} -e "SHOW TABLES LIKE \"wp_options\"") ]]
                then
                  echo -e "🎨  \033[36mActivating theme \033[0m\033[1m${npm_package_name:-ioptheme}\033[0m"
                  mysql -h db $${MYSQL_DATABASE} \
                        -e "UPDATE wp_options \
                            SET option_value = \"'${npm_package_name:-ioptheme}'\" \
                            WHERE option_name in (\"template\",\"stylesheet\")"
                else
                  echo -e "Unable to activate theme: \033[31m'\'wp_options\'' table does not exist.\033[0m"
                  echo "To recreate an existing site, copy the site'\''s MySQL dumpfile into _db"
                  echo If this project is starting from an empty database, you can ignore this messege.
                fi'

  # Repairs permissions for known project files and directories
  # Update image version with `docker run ideasonpurpose/wordpress init`
  # Project info: https://github.com/ideasonpurpose/docker-wordpress-dev
  repair-permissions:
    # image: ideasonpurpose/wordpress:dev
    image: ideasonpurpose/wordpress:0.9.6
    volumes:
      - .:/usr/src/site
    environment:
      OWNER_GROUP: "${UID:-1000}:${GID:-1000}"
    entrypoint: /usr/local/bin/permissions.sh

  # Locally mirror remote sites by pulling the database, plugins and uploads
  # Remote connections are configured in the project's .env file
  # Run `docker run ideasonpurpose/wordpress init` to update the image version
  # Project info: https://github.com/ideasonpurpose/docker-wordpress-dev
  pull:
    # image: ideasonpurpose/wordpress:dev
    image: ideasonpurpose/wordpress:0.9.6
    volumes:
      - .:/usr/src/site
    entrypoint: |
      /usr/local/bin/pull.sh
    environment:
      OWNER_GROUP: "${UID:-1000}:${GID:-1000}"
      SSH_KEY_PATH:
      SSH_LOGIN:
      SSH_USER:
      SSH_PORT:
      SSH_WP_CONTENT_DIR:
    secrets:
      - SSH_KEY

  # Run the init script from ideasonpurpose/wordpress:latest (intentionally "latest")
  # to refresh tooling and bring the project inline with our boilerplate
  # Image from: https://hub.docker.com/r/ideasonpurpose/docker-build
  refresh:
    # image: ideasonpurpose/wordpress:dev
    image: ideasonpurpose/wordpress:latest
    volumes:
      - .:/usr/src/site
    command: init

secrets:
  SSH_KEY:
    file: ${SSH_KEY_PATH:-~/.ssh/your_ssh_private_key}
